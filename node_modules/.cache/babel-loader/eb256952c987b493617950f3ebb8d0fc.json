{"ast":null,"code":"var _jsxFileName = \"/Users/williamspigner/Desktop/NewChat2/chatroom/src/Container/Dashboard/Dashboard.js\";\nimport React, { useContext, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { PageHeader, Input, Button } from \"antd\";\nimport TopicList from \"./TopicList/TopicList\";\nimport Dialog from \"./Dialog/Dialog\";\nimport { ctx } from \"./Store\";\nconst {\n  TextArea\n} = Input;\nconst Box = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  background-color: #\n`;\nconst Header = styled.div`\n  height: 64px;\n  background-color: #432371;\n   \n\n`;\nconst Content = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: row;\n`;\nconst SideLeft = styled.div`\n  border-right: 1px solid grey;\n  width: 300px;\n  \n`;\nconst SideRight = styled.div`\n  padding: 5px;\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n\n  background-color: #432371\n`;\nconst DialogBox = styled.div`\n  flex: 1;\n  background-color: #FAAE78;\n`;\nconst MessageInputBox = styled.div`\n  height: 60px;\n`;\n\nfunction Dashboard() {\n  const {\n    allCharts,\n    sendMessageAction,\n    user\n  } = useContext(ctx);\n  const topics = Object.keys(allCharts);\n  const [activeTopic, changeActiveTopic] = useState(topics[0]);\n  const [textValue, setTextValue] = useState(\"\");\n  console.log(allCharts);\n  return /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PageHeader, {\n    title: \"!PLAY-Chat\",\n    subTitle: activeTopic,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SideLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TopicList, Object.assign({\n    topics,\n    changeActiveTopic,\n    activeTopic\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(SideRight, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DialogBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    list: allCharts[activeTopic],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(MessageInputBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextArea, {\n    rows: 1,\n    value: textValue,\n    onChange: e => setTextValue(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      sendMessageAction({\n        from: user,\n        msg: textValue,\n        topic: activeTopic\n      });\n      setTextValue(\"\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, \"Send\")))));\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/williamspigner/Desktop/NewChat2/chatroom/src/Container/Dashboard/Dashboard.js"],"names":["React","useContext","useState","styled","PageHeader","Input","Button","TopicList","Dialog","ctx","TextArea","Box","div","Header","Content","SideLeft","SideRight","DialogBox","MessageInputBox","Dashboard","allCharts","sendMessageAction","user","topics","Object","keys","activeTopic","changeActiveTopic","textValue","setTextValue","console","log","e","target","value","from","msg","topic"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { PageHeader, Input, Button } from \"antd\";\n\nimport TopicList from \"./TopicList/TopicList\";\nimport Dialog from \"./Dialog/Dialog\";\n\nimport { ctx } from \"./Store\";\n\nconst { TextArea } = Input;\n\nconst Box = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  background-color: #\n`;\nconst Header = styled.div`\n  height: 64px;\n  background-color: #432371;\n   \n\n`;\nconst Content = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: row;\n`;\n\nconst SideLeft = styled.div`\n  border-right: 1px solid grey;\n  width: 300px;\n  \n`;\nconst SideRight = styled.div`\n  padding: 5px;\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n\n  background-color: #432371\n`;\nconst DialogBox = styled.div`\n  flex: 1;\n  background-color: #FAAE78;\n`;\n\nconst MessageInputBox = styled.div`\n  height: 60px;\n`;\n\nfunction Dashboard() {\n  const { allCharts, sendMessageAction, user } = useContext(ctx);\n  const topics = Object.keys(allCharts);\n  const [activeTopic, changeActiveTopic] = useState(topics[0]);\n  const [textValue, setTextValue] = useState(\"\");\n  console.log(allCharts)\n  return (\n    <Box>\n      <Header>\n        <PageHeader title=\"!PLAY-Chat\" subTitle={activeTopic} />\n      </Header>\n      <Content>\n        <SideLeft>\n          <TopicList {...{ topics, changeActiveTopic, activeTopic }} />\n        </SideLeft>\n        <SideRight>\n          <DialogBox>\n            <Dialog list={allCharts[activeTopic]} />\n          </DialogBox>\n          <MessageInputBox>\n            <TextArea\n              rows={1}\n              value={textValue}\n              onChange={e => setTextValue(e.target.value)}\n            />\n            <Button\n              onClick={() => {\n                sendMessageAction({\n                  from: user,\n                  msg: textValue,\n                  topic: activeTopic\n                });\n                setTextValue(\"\");\n              }}\n            >\n              Send\n            </Button>\n          </MessageInputBox>\n        </SideRight>\n      </Content>\n    </Box>\n  );\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}